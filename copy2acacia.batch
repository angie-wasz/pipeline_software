#!/bin/bash -l
 
#SBATCH --account=mwasci
#SBATCH --job-name=copy-to-acacia
#SBATCH --output=/scratch/mwasci/awaszewski/2023_febmar_hdf5/copy2acacia.out
#SBATCH --clusters=setonix
#SBATCH --partition=copy
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=4
#SBATCH --mem-per-cpu=8G
#SBATCH --time=12:00:00
#SBATCH --export=NONE
#SBATCH --signal=B:INT@60
trap 'echo "Requeuing job."; scontrol requeue $SLURM_JOB_ID;' INT

#-----------------
#Loading the required modules
module load rclone/1.63.1
 
#-----------------
#Defining variables that will hold the names related to your access, buckets and objects to be stored in Acacia
profileName=mwasci
bucketName=awaszewski
prefixPath=ips/hdf5_2023/
fullPathInAcacia="${profileName}:${bucketName}/${prefixPath}" #Note the colon(:) when using rclone

#Local storage variables
workingDir=/scratch/mwasci/awaszewski/2023_febmar_hdf5/hdf5/
tarFileNames=( 1359250232.hdf5 1359252496.hdf5 1359254488.hdf5 1359258096.hdf5 1359262032.hdf5 1359337032.hdf5 1359337640.hdf5 1359338920.hdf5 1359340912.hdf5 1359353312.hdf5 1359355344.hdf5 1359357000.hdf5 1359357608.hdf5 1359423080.hdf5 1359425344.hdf5 1359427368.hdf5 1359441736.hdf5 1359443992.hdf5 1359511768.hdf5 1359526112.hdf5 1359595928.hdf5 1359598192.hdf5 1359600192.hdf5 1359605744.hdf5 1359611968.hdf5 1359616760.hdf5 1359686608.hdf5 1359696936.hdf5 1359768784.hdf5 1359771024.hdf5 1359783336.hdf5 1359871688.hdf5 1359943856.hdf5 1359945840.hdf5 1360025408.hdf5 1360032248.hdf5 1360205064.hdf5 1360216648.hdf5 1360218216.hdf5 1360391408.hdf5 1360392016.hdf5 1360396816.hdf5 1360459528.hdf5 1360462416.hdf5 1360464288.hdf5 1360477184.hdf5 1360477792.hdf5 1360483184.hdf5 1360545944.hdf5 1360546552.hdf5 1360548744.hdf5 1360562824.hdf5 1360564168.hdf5 1360564776.hdf5 1360566960.hdf5 1360632360.hdf5 1360632968.hdf5 1360635192.hdf5 1360635800.hdf5 1360649952.hdf5 1360650560.hdf5 1360723496.hdf5 1360735560.hdf5 1360739712.hdf5 1360891304.hdf5 1360892520.hdf5 1360893248.hdf5 1360896296.hdf5 1360908352.hdf5 1360911864.hdf5 1360978008.hdf5 1360978616.hdf5 1360980784.hdf5 1360982696.hdf5 1361064408.hdf5 1361065016.hdf5 1361065624.hdf5 1361069096.hdf5 1361081120.hdf5 1361083072.hdf5 1361151424.hdf5 1361153576.hdf5 1361160920.hdf5 1361169456.hdf5 1361241896.hdf5 1361328440.hdf5 1361582848.hdf5 1361587616.hdf5 1361588224.hdf5 1361599432.hdf5 1361601360.hdf5 1361689848.hdf5 1361760400.hdf5 1361770672.hdf5 1361772200.hdf5 1361846792.hdf5 1361862600.hdf5 1361865080.hdf5 1361928440.hdf5 1361944968.hdf5 1361947520.hdf5 1361951472.hdf5 1362014832.hdf5 1362033184.hdf5 1362101232.hdf5 1362105864.hdf5 1362117728.hdf5 1362120288.hdf5 1362208096.hdf5 1362274032.hdf5 1362276792.hdf5 1362278648.hdf5 1362293064.hdf5 1362294488.hdf5 1362360432.hdf5 1362361040.hdf5 1362379000.hdf5 1362379672.hdf5 1362446824.hdf5 1362447432.hdf5 1362449088.hdf5 1362451416.hdf5 1362463256.hdf5 1362465176.hdf5 1362467240.hdf5 1362619600.hdf5 1362639384.hdf5 1362706600.hdf5 1362710872.hdf5 1362715176.hdf5 1362725736.hdf5 1362726344.hdf5 1362726952.hdf5 1362792384.hdf5 1362808704.hdf5 1362811512.hdf5 1362812120.hdf5 1362812728.hdf5 1362813336.hdf5 1362878776.hdf5 1362892944.hdf5 1362898496.hdf5 1362965160.hdf5 1362965768.hdf5 1362970024.hdf5 1362981552.hdf5 1362985488.hdf5 1362986096.hdf5 1362986704.hdf5 1363051552.hdf5 1363071864.hdf5 1363072472.hdf5 1363073248.hdf5 1363073856.hdf5 1363137936.hdf5 1363138544.hdf5 1363142792.hdf5 1363144704.hdf5 1363154320.hdf5 1363159960.hdf5 1363224312.hdf5 1363229168.hdf5 1363246640.hdf5 1363310704.hdf5 1363315552.hdf5 1363317272.hdf5 1363325352.hdf5 1363327080.hdf5 1363331008.hdf5 1363332880.hdf5 )


# YOU SHOULD NOT NEED TO EDIT ANYTHING BELOW THIS LINE
#-----------------------------------------------------

#Check if Acacia definitions make sense, and if you can transfer objects into the desired bucket
echo "Checking that the profile exists"
rclone config show | grep "${profileName}" > /dev/null; exitcode=$?
if [ $exitcode -ne 0 ]; then
   echo "The given profileName=$profileName seems not to exist in the user configuration of rclone"
   echo "Exiting the script with non-zero code in order to inform job dependencies not to continue."
   exit 1
fi
echo "Checking the bucket exists and that you have writing access"
rclone lsd "${profileName}:${bucketName}" > /dev/null; exitcode=$? #Note the colon(:) when using rclone
if [ $exitcode -ne 0 ]; then
   echo "The bucket intended to receive the data does not exist: ${profileName}:${bucketName}"
   echo "Trying to create it"
   rclone mkdir "${profileName}:${bucketName}"; exitcode=$?
   if [ $exitcode -ne 0 ]; then
      echo "Creation of bucket failed"
      echo "The bucket name or the profile name may be wrong: ${profileName}:${bucketName}"
      echo "Exiting the script with non-zero code in order to inform job dependencies not to continue."
      exit 1
   fi
fi
echo "Checking if a test file can be trasferred into the desired full path in Acacia"
testFile=test_file_${SLURM_JOBID}.txt
echo "File for test" > "${testFile}"
rclone copy "${testFile}" "${fullPathInAcacia}/"; exitcode=$?
if [ $exitcode -ne 0 ]; then
   echo "The test file $testFile cannot be transferred into ${fullPathInAcacia}"
   echo "Exiting the script with non-zero code in order to inform job dependencies not to continue."
   exit 1
fi
echo "Checking if the test file can be listed in Acacia"
listResult=$(rclone lsl "${fullPathInAcacia}/${testFile}")
if [ -z "$listResult" ]; then
   echo "Problems occurred during the listing of the test file ${testFile} in ${fullPathInAcacia}"
   echo "Exiting the script with non-zero code in order to inform job dependencies not to continue."
   exit 1
fi
echo "Removing test file from Acacia"
rclone delete "${fullPathInAcacia}/${testFile}"; exitcode=$?
if [ $exitcode -ne 0 ]; then
   echo "The test file $testFile cannot be removed from ${fullPathInAcacia}"
   echo "Exiting the script with non-zero code in order to inform job dependencies not to continue."
   exit 1
fi
rm $testFile
 
#----------------
#Defining the working dir and cd into it
echo "Checking that the working directory exists"
if ! [ -d $workingDir ]; then
   echo "The working directory $workingDir does not exist"
   echo "Exiting the script with non-zero code in order to inform job dependencies not to continue."
   exit 1
else
   cd $workingDir
fi
 
#-----------------
#Perform the transfer of the tar file into the working directory and check for the transfer
echo "Performing the transfer ... "
for tarFile in "${tarFileNames[@]}";do
    echo "rclone sync -P --transfers ${SLURM_CPUS_PER_TASK} --checkers ${SLURM_CPUS_PER_TASK} ${workingDir}/${tarFile} ${fullPathInAcacia}/ &"
    srun rclone sync -P --transfers ${SLURM_CPUS_PER_TASK} --checkers ${SLURM_CPUS_PER_TASK} "${workingDir}/${tarFile}" "${fullPathInAcacia}/" &
    wait $!; exitcode=$?
    if [ $exitcode -ne 0 ]; then
       echo "Problems occurred during the transfer of file ${tarFile}"
       echo "Check that the file exists in ${workingDir}"
       echo "And that nothing is wrong with the fullPathInAcacia: ${fullPathInAcacia}/"
       echo "Exiting the script with non-zero code in order to inform job dependencies not to continue."
       exit 1
    else
       echo "Final place in Acacia: ${fullPathInAcacia}/${tarFile}"
    fi
done 
#---------------
# Final checks ...
 
#---------------
#Successfully finished
echo "Done"
exit 0
